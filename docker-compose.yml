services:
  kafka:
    image: apache/kafka:4.0.1-rc2
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093 # Listen on all interfaces
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 # Use service name for inter-container communication
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "19092:9092"

  binance-stream:
    build:
      context: ./ingestion
      dockerfile: ingestion.Dockerfile
    container_name: binance-stream
    depends_on:
      - kafka
    volumes:
      - ./ingestion:/app
    command: 
      ["sh", "-c", "sleep infinity"]

  # spark-master:
  #   build:
  #     context: .
  #     dockerfile: spark.Dockerfile
  #   environment:
  #     - SPARK_MODE=master
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #     - SPARK_RPC_ENCRYPTION_ENABLED=no
  #     - SPARK_SSL_ENABLED=no
  #     - SPARK_MASTER_WEBUI_PORT=8080
  #     - SPARK_DAEMON_MEMORY=1g
  #   ports:
  #     - "17077:7077"   # Spark master RPC
  #     - "18080:8080"   # Spark master UI
  #   volumes:
  #     - ./src:/opt/workspace

  spark-master:
    build:
      context: ./spark
      dockerfile: spark.Dockerfile
    user: root
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "17077:7077"
      - "18080:8080"
    environment:
      SPARK_MODE: master
    volumes:
      - ./spark-apps:/opt/workspace
    working_dir: /opt/workspace


  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: crypto_db
    ports:
      - "15432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana:12.3.0-18701397209
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: your_grafana_password
    ports:
      - "13000:3000"
    depends_on:
      - postgres
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  pgdata:
  grafana-storage: